#import <Foundation/Foundation.h>
#import "CommonResponseError.h"
#import "DomainCreateObjectV1Request.h"
#import "DomainCreateObjectV1Response.h"
#import "DomainDeleteObjectV1Response.h"
#import "DomainGetListV1Response.h"
#import "DomainGetObjectV2Response.h"
#import "HeaderAcceptLanguage.h"
#import "Api.h"

/**
* eZmax API Definition (Full)
* This API expose all the functionnalities for the eZmax and eZsign applications.
*
* The version of the OpenAPI document: 1.2.2
* Contact: support-api@ezmax.ca
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface ObjectDomainApi: NSObject <Api>

extern NSString* kObjectDomainApiErrorDomain;
extern NSInteger kObjectDomainApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(ApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create a new Domain
/// The endpoint allows to create one or many elements at once.
///
/// @param domainCreateObjectV1Request 
/// 
///  code:201 message:"Successful response"
///
/// @return DomainCreateObjectV1Response*
-(NSURLSessionTask*) domainCreateObjectV1WithDomainCreateObjectV1Request: (DomainCreateObjectV1Request*) domainCreateObjectV1Request
    completionHandler: (void (^)(DomainCreateObjectV1Response* output, NSError* error)) handler;


/// Delete an existing Domain
/// 
///
/// @param pkiDomainID The unique ID of the Domain
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return DomainDeleteObjectV1Response*
-(NSURLSessionTask*) domainDeleteObjectV1WithPkiDomainID: (NSNumber*) pkiDomainID
    completionHandler: (void (^)(DomainDeleteObjectV1Response* output, NSError* error)) handler;


/// Retrieve Domain list
/// 
///
/// @param eOrderBy Specify how you want the results to be sorted (optional)
/// @param iRowMax  (optional)
/// @param iRowOffset  (optional) (default to @0)
/// @param acceptLanguage  (optional)
/// @param sFilter  (optional)
/// 
///  code:200 message:"Successful response",
///  code:406 message:"The URL is valid, but one of the Accept header is not defined or invalid. For example, you set the header \"Accept: application/json\" but the function can only return \"Content-type: image/png\""
///
/// @return DomainGetListV1Response*
-(NSURLSessionTask*) domainGetListV1WithEOrderBy: (NSString*) eOrderBy
    iRowMax: (NSNumber*) iRowMax
    iRowOffset: (NSNumber*) iRowOffset
    acceptLanguage: (HeaderAcceptLanguage) acceptLanguage
    sFilter: (NSString*) sFilter
    completionHandler: (void (^)(DomainGetListV1Response* output, NSError* error)) handler;


/// Retrieve an existing Domain
/// 
///
/// @param pkiDomainID The unique ID of the Domain
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return DomainGetObjectV2Response*
-(NSURLSessionTask*) domainGetObjectV2WithPkiDomainID: (NSNumber*) pkiDomainID
    completionHandler: (void (^)(DomainGetObjectV2Response* output, NSError* error)) handler;



@end
