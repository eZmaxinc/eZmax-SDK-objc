#import <Foundation/Foundation.h>
#import "CommonResponseError.h"
#import "HeaderAcceptLanguage.h"
#import "UsergroupCreateObjectV1Request.h"
#import "UsergroupCreateObjectV1Response.h"
#import "UsergroupEditObjectV1Request.h"
#import "UsergroupEditObjectV1Response.h"
#import "UsergroupEditPermissionsV1Request.h"
#import "UsergroupEditPermissionsV1Response.h"
#import "UsergroupEditUsergroupdelegationsV1Request.h"
#import "UsergroupEditUsergroupdelegationsV1Response.h"
#import "UsergroupEditUsergroupmembershipsV1Request.h"
#import "UsergroupEditUsergroupmembershipsV1Response.h"
#import "UsergroupGetAutocompleteV2Response.h"
#import "UsergroupGetListV1Response.h"
#import "UsergroupGetObjectV2Response.h"
#import "UsergroupGetPermissionsV1Response.h"
#import "UsergroupGetUsergroupdelegationsV1Response.h"
#import "UsergroupGetUsergroupmembershipsV1Response.h"
#import "Api.h"

/**
* eZmax API Definition (Full)
* This API expose all the functionnalities for the eZmax and eZsign applications.
*
* The version of the OpenAPI document: 1.2.2
* Contact: support-api@ezmax.ca
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface ObjectUsergroupApi: NSObject <Api>

extern NSString* kObjectUsergroupApiErrorDomain;
extern NSInteger kObjectUsergroupApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(ApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create a new Usergroup
/// The endpoint allows to create one or many elements at once.
///
/// @param usergroupCreateObjectV1Request 
/// 
///  code:201 message:"Successful response"
///
/// @return UsergroupCreateObjectV1Response*
-(NSURLSessionTask*) usergroupCreateObjectV1WithUsergroupCreateObjectV1Request: (UsergroupCreateObjectV1Request*) usergroupCreateObjectV1Request
    completionHandler: (void (^)(UsergroupCreateObjectV1Response* output, NSError* error)) handler;


/// Edit an existing Usergroup
/// 
///
/// @param pkiUsergroupID 
/// @param usergroupEditObjectV1Request 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
///  code:422 message:"The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body"
///
/// @return UsergroupEditObjectV1Response*
-(NSURLSessionTask*) usergroupEditObjectV1WithPkiUsergroupID: (NSNumber*) pkiUsergroupID
    usergroupEditObjectV1Request: (UsergroupEditObjectV1Request*) usergroupEditObjectV1Request
    completionHandler: (void (^)(UsergroupEditObjectV1Response* output, NSError* error)) handler;


/// Edit multiple Permissions
/// Using this endpoint, you can edit multiple Permissions at the same time.
///
/// @param pkiUsergroupID 
/// @param usergroupEditPermissionsV1Request 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
///  code:422 message:"The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body"
///
/// @return UsergroupEditPermissionsV1Response*
-(NSURLSessionTask*) usergroupEditPermissionsV1WithPkiUsergroupID: (NSNumber*) pkiUsergroupID
    usergroupEditPermissionsV1Request: (UsergroupEditPermissionsV1Request*) usergroupEditPermissionsV1Request
    completionHandler: (void (^)(UsergroupEditPermissionsV1Response* output, NSError* error)) handler;


/// Edit multiple Usergroupdelegations
/// Edit multiple Usergroupdelegations
///
/// @param pkiUsergroupID 
/// @param usergroupEditUsergroupdelegationsV1Request 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
///  code:422 message:"The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body"
///
/// @return UsergroupEditUsergroupdelegationsV1Response*
-(NSURLSessionTask*) usergroupEditUsergroupdelegationsV1WithPkiUsergroupID: (NSNumber*) pkiUsergroupID
    usergroupEditUsergroupdelegationsV1Request: (UsergroupEditUsergroupdelegationsV1Request*) usergroupEditUsergroupdelegationsV1Request
    completionHandler: (void (^)(UsergroupEditUsergroupdelegationsV1Response* output, NSError* error)) handler;


/// Edit multiple Usergroupmemberships
/// Using this endpoint, you can edit multiple Usergroupmemberships at the same time.
///
/// @param pkiUsergroupID 
/// @param usergroupEditUsergroupmembershipsV1Request 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
///  code:422 message:"The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body"
///
/// @return UsergroupEditUsergroupmembershipsV1Response*
-(NSURLSessionTask*) usergroupEditUsergroupmembershipsV1WithPkiUsergroupID: (NSNumber*) pkiUsergroupID
    usergroupEditUsergroupmembershipsV1Request: (UsergroupEditUsergroupmembershipsV1Request*) usergroupEditUsergroupmembershipsV1Request
    completionHandler: (void (^)(UsergroupEditUsergroupmembershipsV1Response* output, NSError* error)) handler;


/// Retrieve Usergroups and IDs
/// Get the list of Usergroup to be used in a dropdown or autocomplete control.
///
/// @param sSelector The type of Usergroups to return
/// @param eFilterActive Specify which results we want to display. (optional) (default to @"Active")
/// @param sQuery Allow to filter the returned results (optional)
/// @param acceptLanguage  (optional)
/// 
///  code:200 message:"Successful response"
///
/// @return UsergroupGetAutocompleteV2Response*
-(NSURLSessionTask*) usergroupGetAutocompleteV2WithSSelector: (NSString*) sSelector
    eFilterActive: (NSString*) eFilterActive
    sQuery: (NSString*) sQuery
    acceptLanguage: (HeaderAcceptLanguage) acceptLanguage
    completionHandler: (void (^)(UsergroupGetAutocompleteV2Response* output, NSError* error)) handler;


/// Retrieve Usergroup list
/// 
///
/// @param eOrderBy Specify how you want the results to be sorted (optional)
/// @param iRowMax  (optional)
/// @param iRowOffset  (optional) (default to @0)
/// @param acceptLanguage  (optional)
/// @param sFilter  (optional)
/// 
///  code:200 message:"Successful response",
///  code:406 message:"The URL is valid, but one of the Accept header is not defined or invalid. For example, you set the header \"Accept: application/json\" but the function can only return \"Content-type: image/png\""
///
/// @return UsergroupGetListV1Response*
-(NSURLSessionTask*) usergroupGetListV1WithEOrderBy: (NSString*) eOrderBy
    iRowMax: (NSNumber*) iRowMax
    iRowOffset: (NSNumber*) iRowOffset
    acceptLanguage: (HeaderAcceptLanguage) acceptLanguage
    sFilter: (NSString*) sFilter
    completionHandler: (void (^)(UsergroupGetListV1Response* output, NSError* error)) handler;


/// Retrieve an existing Usergroup
/// 
///
/// @param pkiUsergroupID 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return UsergroupGetObjectV2Response*
-(NSURLSessionTask*) usergroupGetObjectV2WithPkiUsergroupID: (NSNumber*) pkiUsergroupID
    completionHandler: (void (^)(UsergroupGetObjectV2Response* output, NSError* error)) handler;


/// Retrieve an existing Usergroup's Permissions
/// 
///
/// @param pkiUsergroupID 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return UsergroupGetPermissionsV1Response*
-(NSURLSessionTask*) usergroupGetPermissionsV1WithPkiUsergroupID: (NSNumber*) pkiUsergroupID
    completionHandler: (void (^)(UsergroupGetPermissionsV1Response* output, NSError* error)) handler;


/// Retrieve an existing Usergroup's Usergroupdelegations
/// 
///
/// @param pkiUsergroupID 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return UsergroupGetUsergroupdelegationsV1Response*
-(NSURLSessionTask*) usergroupGetUsergroupdelegationsV1WithPkiUsergroupID: (NSNumber*) pkiUsergroupID
    completionHandler: (void (^)(UsergroupGetUsergroupdelegationsV1Response* output, NSError* error)) handler;


/// Retrieve an existing Usergroup's Usergroupmemberships
/// 
///
/// @param pkiUsergroupID 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return UsergroupGetUsergroupmembershipsV1Response*
-(NSURLSessionTask*) usergroupGetUsergroupmembershipsV1WithPkiUsergroupID: (NSNumber*) pkiUsergroupID
    completionHandler: (void (^)(UsergroupGetUsergroupmembershipsV1Response* output, NSError* error)) handler;



@end
