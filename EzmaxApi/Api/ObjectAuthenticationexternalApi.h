#import <Foundation/Foundation.h>
#import "AuthenticationexternalCreateObjectV1Request.h"
#import "AuthenticationexternalCreateObjectV1Response.h"
#import "AuthenticationexternalDeleteObjectV1Response.h"
#import "AuthenticationexternalEditObjectV1Request.h"
#import "AuthenticationexternalEditObjectV1Response.h"
#import "AuthenticationexternalGetAutocompleteV2Response.h"
#import "AuthenticationexternalGetListV1Response.h"
#import "AuthenticationexternalGetObjectV2Response.h"
#import "AuthenticationexternalResetAuthorizationV1Response.h"
#import "CommonResponseError.h"
#import "HeaderAcceptLanguage.h"
#import "Api.h"

/**
* eZmax API Definition (Full)
* This API expose all the functionnalities for the eZmax and eZsign applications.
*
* The version of the OpenAPI document: 1.2.1
* Contact: support-api@ezmax.ca
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface ObjectAuthenticationexternalApi: NSObject <Api>

extern NSString* kObjectAuthenticationexternalApiErrorDomain;
extern NSInteger kObjectAuthenticationexternalApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(ApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create a new Authenticationexternal
/// The endpoint allows to create one or many elements at once.
///
/// @param authenticationexternalCreateObjectV1Request 
/// 
///  code:201 message:"Successful response"
///
/// @return AuthenticationexternalCreateObjectV1Response*
-(NSURLSessionTask*) authenticationexternalCreateObjectV1WithAuthenticationexternalCreateObjectV1Request: (AuthenticationexternalCreateObjectV1Request*) authenticationexternalCreateObjectV1Request
    completionHandler: (void (^)(AuthenticationexternalCreateObjectV1Response* output, NSError* error)) handler;


/// Delete an existing Authenticationexternal
/// 
///
/// @param pkiAuthenticationexternalID The unique ID of the Authenticationexternal
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return AuthenticationexternalDeleteObjectV1Response*
-(NSURLSessionTask*) authenticationexternalDeleteObjectV1WithPkiAuthenticationexternalID: (NSNumber*) pkiAuthenticationexternalID
    completionHandler: (void (^)(AuthenticationexternalDeleteObjectV1Response* output, NSError* error)) handler;


/// Edit an existing Authenticationexternal
/// 
///
/// @param pkiAuthenticationexternalID The unique ID of the Authenticationexternal
/// @param authenticationexternalEditObjectV1Request 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
///  code:422 message:"The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body"
///
/// @return AuthenticationexternalEditObjectV1Response*
-(NSURLSessionTask*) authenticationexternalEditObjectV1WithPkiAuthenticationexternalID: (NSNumber*) pkiAuthenticationexternalID
    authenticationexternalEditObjectV1Request: (AuthenticationexternalEditObjectV1Request*) authenticationexternalEditObjectV1Request
    completionHandler: (void (^)(AuthenticationexternalEditObjectV1Response* output, NSError* error)) handler;


/// Retrieve Authenticationexternals and IDs
/// Get the list of Authenticationexternal to be used in a dropdown or autocomplete control.
///
/// @param sSelector The type of Authenticationexternals to return
/// @param eFilterActive Specify which results we want to display. (optional) (default to @"Active")
/// @param sQuery Allow to filter the returned results (optional)
/// @param acceptLanguage  (optional)
/// 
///  code:200 message:"Successful response"
///
/// @return AuthenticationexternalGetAutocompleteV2Response*
-(NSURLSessionTask*) authenticationexternalGetAutocompleteV2WithSSelector: (NSString*) sSelector
    eFilterActive: (NSString*) eFilterActive
    sQuery: (NSString*) sQuery
    acceptLanguage: (HeaderAcceptLanguage) acceptLanguage
    completionHandler: (void (^)(AuthenticationexternalGetAutocompleteV2Response* output, NSError* error)) handler;


/// Retrieve Authenticationexternal list
/// Enum values that can be filtered in query parameter *sFilter*:  | Variable | Valid values | |---|---| | eAuthenticationexternalType | Salesforce<br>SalesforceSandbox |
///
/// @param eOrderBy Specify how you want the results to be sorted (optional)
/// @param iRowMax  (optional)
/// @param iRowOffset  (optional) (default to @0)
/// @param acceptLanguage  (optional)
/// @param sFilter  (optional)
/// 
///  code:200 message:"Successful response",
///  code:406 message:"The URL is valid, but one of the Accept header is not defined or invalid. For example, you set the header \"Accept: application/json\" but the function can only return \"Content-type: image/png\""
///
/// @return AuthenticationexternalGetListV1Response*
-(NSURLSessionTask*) authenticationexternalGetListV1WithEOrderBy: (NSString*) eOrderBy
    iRowMax: (NSNumber*) iRowMax
    iRowOffset: (NSNumber*) iRowOffset
    acceptLanguage: (HeaderAcceptLanguage) acceptLanguage
    sFilter: (NSString*) sFilter
    completionHandler: (void (^)(AuthenticationexternalGetListV1Response* output, NSError* error)) handler;


/// Retrieve an existing Authenticationexternal
/// 
///
/// @param pkiAuthenticationexternalID The unique ID of the Authenticationexternal
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return AuthenticationexternalGetObjectV2Response*
-(NSURLSessionTask*) authenticationexternalGetObjectV2WithPkiAuthenticationexternalID: (NSNumber*) pkiAuthenticationexternalID
    completionHandler: (void (^)(AuthenticationexternalGetObjectV2Response* output, NSError* error)) handler;


/// Reset the Authenticationexternal authorization
/// 
///
/// @param pkiAuthenticationexternalID 
/// @param body 
/// 
///  code:200 message:"Successful response",
///  code:422 message:"The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body"
///
/// @return AuthenticationexternalResetAuthorizationV1Response*
-(NSURLSessionTask*) authenticationexternalResetAuthorizationV1WithPkiAuthenticationexternalID: (NSNumber*) pkiAuthenticationexternalID
    body: (NSObject*) body
    completionHandler: (void (^)(AuthenticationexternalResetAuthorizationV1Response* output, NSError* error)) handler;



@end
