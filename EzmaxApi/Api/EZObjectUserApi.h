#import <Foundation/Foundation.h>
#import "EZCommonResponseError.h"
#import "EZHeaderAcceptLanguage.h"
#import "EZUserCreateObjectV1Request.h"
#import "EZUserCreateObjectV1Response.h"
#import "EZUserEditObjectV1Request.h"
#import "EZUserEditObjectV1Response.h"
#import "EZUserEditPermissionsV1Request.h"
#import "EZUserEditPermissionsV1Response.h"
#import "EZUserGetAutocompleteV2Response.h"
#import "EZUserGetEffectivePermissionsV1Response.h"
#import "EZUserGetListV1Response.h"
#import "EZUserGetObjectV2Response.h"
#import "EZUserGetPermissionsV1Response.h"
#import "EZUserGetSubnetsV1Response.h"
#import "EZApi.h"

/**
* eZmax API Definition (Full)
* This API expose all the functionnalities for the eZmax and eZsign applications.
*
* The version of the OpenAPI document: 1.1.18
* Contact: support-api@ezmax.ca
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface EZObjectUserApi: NSObject <EZApi>

extern NSString* kEZObjectUserApiErrorDomain;
extern NSInteger kEZObjectUserApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(EZApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create a new User
/// The endpoint allows to create one or many elements at once.
///
/// @param userCreateObjectV1Request 
/// 
///  code:201 message:"Successful response"
///
/// @return EZUserCreateObjectV1Response*
-(NSURLSessionTask*) userCreateObjectV1WithUserCreateObjectV1Request: (EZUserCreateObjectV1Request*) userCreateObjectV1Request
    completionHandler: (void (^)(EZUserCreateObjectV1Response* output, NSError* error)) handler;


/// Edit an existing User
/// 
///
/// @param pkiUserID The unique ID of the User
/// @param userEditObjectV1Request 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
///  code:422 message:"The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body"
///
/// @return EZUserEditObjectV1Response*
-(NSURLSessionTask*) userEditObjectV1WithPkiUserID: (NSNumber*) pkiUserID
    userEditObjectV1Request: (EZUserEditObjectV1Request*) userEditObjectV1Request
    completionHandler: (void (^)(EZUserEditObjectV1Response* output, NSError* error)) handler;


/// Edit multiple Permissions
/// Using this endpoint, you can edit multiple Permissions at the same time.
///
/// @param pkiUserID 
/// @param userEditPermissionsV1Request 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
///  code:422 message:"The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body"
///
/// @return EZUserEditPermissionsV1Response*
-(NSURLSessionTask*) userEditPermissionsV1WithPkiUserID: (NSNumber*) pkiUserID
    userEditPermissionsV1Request: (EZUserEditPermissionsV1Request*) userEditPermissionsV1Request
    completionHandler: (void (^)(EZUserEditPermissionsV1Response* output, NSError* error)) handler;


/// Retrieve Users and IDs
/// Get the list of User to be used in a dropdown or autocomplete control.
///
/// @param sSelector The type of Users to return
/// @param eFilterActive Specify which results we want to display. (optional) (default to @"Active")
/// @param sQuery Allow to filter the returned results (optional)
/// @param acceptLanguage  (optional)
/// 
///  code:200 message:"Successful response"
///
/// @return EZUserGetAutocompleteV2Response*
-(NSURLSessionTask*) userGetAutocompleteV2WithSSelector: (NSString*) sSelector
    eFilterActive: (NSString*) eFilterActive
    sQuery: (NSString*) sQuery
    acceptLanguage: (EZHeaderAcceptLanguage) acceptLanguage
    completionHandler: (void (^)(EZUserGetAutocompleteV2Response* output, NSError* error)) handler;


/// Retrieve an existing User's Effective Permissions
/// Effective Permissions refers to the combination of Permissions held by a User and the Permissions associated with the Usergroups they belong to.
///
/// @param pkiUserID 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return EZUserGetEffectivePermissionsV1Response*
-(NSURLSessionTask*) userGetEffectivePermissionsV1WithPkiUserID: (NSNumber*) pkiUserID
    completionHandler: (void (^)(EZUserGetEffectivePermissionsV1Response* output, NSError* error)) handler;


/// Retrieve User list
/// Enum values that can be filtered in query parameter *sFilter*:  | Variable | Valid values | |---|---| | eUserType | AgentBroker<br>Assistant<br>Employee<br>EzsignUser<br>Normal | | eUserOrigin | BuiltIn<br>External | | eUserEzsignaccess | No<br>PaidByOffice<br>PerDocument<br>Prepaid |
///
/// @param eOrderBy Specify how you want the results to be sorted (optional)
/// @param iRowMax  (optional) (default to @10000)
/// @param iRowOffset  (optional) (default to @0)
/// @param acceptLanguage  (optional)
/// @param sFilter  (optional)
/// 
///  code:200 message:"Successful response",
///  code:406 message:"The URL is valid, but one of the Accept header is not defined or invalid. For example, you set the header \"Accept: application/json\" but the function can only return \"Content-type: image/png\""
///
/// @return EZUserGetListV1Response*
-(NSURLSessionTask*) userGetListV1WithEOrderBy: (NSString*) eOrderBy
    iRowMax: (NSNumber*) iRowMax
    iRowOffset: (NSNumber*) iRowOffset
    acceptLanguage: (EZHeaderAcceptLanguage) acceptLanguage
    sFilter: (NSString*) sFilter
    completionHandler: (void (^)(EZUserGetListV1Response* output, NSError* error)) handler;


/// Retrieve an existing User
/// 
///
/// @param pkiUserID The unique ID of the User
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return EZUserGetObjectV2Response*
-(NSURLSessionTask*) userGetObjectV2WithPkiUserID: (NSNumber*) pkiUserID
    completionHandler: (void (^)(EZUserGetObjectV2Response* output, NSError* error)) handler;


/// Retrieve an existing User's Permissions
/// 
///
/// @param pkiUserID 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return EZUserGetPermissionsV1Response*
-(NSURLSessionTask*) userGetPermissionsV1WithPkiUserID: (NSNumber*) pkiUserID
    completionHandler: (void (^)(EZUserGetPermissionsV1Response* output, NSError* error)) handler;


/// Retrieve an existing User's Subnets
/// 
///
/// @param pkiUserID 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
///
/// @return EZUserGetSubnetsV1Response*
-(NSURLSessionTask*) userGetSubnetsV1WithPkiUserID: (NSNumber*) pkiUserID
    completionHandler: (void (^)(EZUserGetSubnetsV1Response* output, NSError* error)) handler;



@end
