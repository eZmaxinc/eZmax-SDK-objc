#import <Foundation/Foundation.h>
#import "EZCommonResponseError.h"
#import "EZEzsignsignatureCreateObjectV1Request.h"
#import "EZEzsignsignatureCreateObjectV1Response.h"
#import "EZEzsignsignatureDeleteObjectV1Response.h"
#import "EZEzsignsignatureEditObjectV1Request.h"
#import "EZEzsignsignatureEditObjectV1Response.h"
#import "EZEzsignsignatureGetObjectV1Response.h"
#import "EZApi.h"

/**
* eZmax API Definition
* This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
*
* The version of the OpenAPI document: 1.0.28
* Contact: support-api@ezmax.ca
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface EZObjectEzsignsignatureApi: NSObject <EZApi>

extern NSString* kEZObjectEzsignsignatureApiErrorDomain;
extern NSInteger kEZObjectEzsignsignatureApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(EZApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create a new Ezsignsignature
/// The endpoint allows to create one or many elements at once.  The array can contain simple (Just the object) or compound (The object and its child) objects.  Creating compound elements allows to reduce the multiple requests to create all child objects.
///
/// @param ezsignsignatureCreateObjectV1Request 
/// 
///  code:201 message:"Successful response"
///
/// @return EZEzsignsignatureCreateObjectV1Response*
-(NSURLSessionTask*) ezsignsignatureCreateObjectV1WithEzsignsignatureCreateObjectV1Request: (NSArray<EZEzsignsignatureCreateObjectV1Request>*) ezsignsignatureCreateObjectV1Request
    completionHandler: (void (^)(EZEzsignsignatureCreateObjectV1Response* output, NSError* error)) handler;


/// Delete an existing Ezsignsignature
/// 
///
/// @param pkiEzsignsignatureID The unique ID of the Ezsignsignature
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The element you are trying to work on does not exist",
///  code:422 message:"The syntax of the request is valid but the request cannot be completed. Look for detail in body."
///
/// @return EZEzsignsignatureDeleteObjectV1Response*
-(NSURLSessionTask*) ezsignsignatureDeleteObjectV1WithPkiEzsignsignatureID: (NSNumber*) pkiEzsignsignatureID
    completionHandler: (void (^)(EZEzsignsignatureDeleteObjectV1Response* output, NSError* error)) handler;


/// Modify an existing Ezsignsignature
/// 
///
/// @param pkiEzsignsignatureID The unique ID of the Ezsignsignature
/// @param ezsignsignatureEditObjectV1Request 
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The element you are trying to work on does not exist"
///
/// @return EZEzsignsignatureEditObjectV1Response*
-(NSURLSessionTask*) ezsignsignatureEditObjectV1WithPkiEzsignsignatureID: (NSNumber*) pkiEzsignsignatureID
    ezsignsignatureEditObjectV1Request: (EZEzsignsignatureEditObjectV1Request*) ezsignsignatureEditObjectV1Request
    completionHandler: (void (^)(EZEzsignsignatureEditObjectV1Response* output, NSError* error)) handler;


/// Retrieve an existing Ezsignsignature's children IDs
/// 
///
/// @param pkiEzsignsignatureID The unique ID of the Ezsignsignature
/// 
///  code:404 message:"The element you are trying to work on does not exist"
///
/// @return void
-(NSURLSessionTask*) ezsignsignatureGetObjectGetChildrenV1WithPkiEzsignsignatureID: (NSNumber*) pkiEzsignsignatureID
    completionHandler: (void (^)(NSError* error)) handler;


/// Retrieve an existing Ezsignsignature
/// 
///
/// @param pkiEzsignsignatureID The unique ID of the Ezsignsignature
/// 
///  code:200 message:"Successful response",
///  code:404 message:"The element you are trying to work on does not exist"
///
/// @return EZEzsignsignatureGetObjectV1Response*
-(NSURLSessionTask*) ezsignsignatureGetObjectV1WithPkiEzsignsignatureID: (NSNumber*) pkiEzsignsignatureID
    completionHandler: (void (^)(EZEzsignsignatureGetObjectV1Response* output, NSError* error)) handler;



@end
